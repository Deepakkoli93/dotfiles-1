# add some colors to life
set -g default-terminal "screen-256color"

#### statusbar ####
set -g status-left '#[fg=colour203] #H #[default]'
set -g status-right ""

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg colour223
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour223
set-window-option -g window-status-current-bg blue #highlight active window
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# change default prefix from C-b to C-t
unbind C-b
set -g prefix C-t
bind C-t send-prefix
bind t send-prefix

# open new panes with the same working directory
bind c new-window -c "#{pane_current_path}"

# window status bar
set -g window-status-format "#I:#W"
set -g status-interval 5

setw -g aggressive-resize on
set-window-option -g clock-mode-style 12

set -g set-titles on

# set the escape time
set -g escape-time 50

########################vim-keys###########################
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# copy tmux paste buffer to CLIPBOARD
bind M-w run "tmux save-buffer - | xclip -i -selec clip"
# copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-y run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"


### script to get all color codes ###
##!/usr/bin/env bash
#for i in {0..255} ; do
#    printf "\x1b[38;5;${i}mcolour${i}\n"
#done

